import { ActionRow, ActionRowBuilder, ActionRowData, Embed, EmbedBuilder, MessageActionRowComponent, MessageActionRowComponentBuilder, MessageActionRowComponentData, MessageCreateOptions } from 'discord.js';
export interface PageData extends Pick<MessageCreateOptions, 'allowedMentions' | 'content' | 'embeds' | 'files' | 'nonce' | 'stickers'> {
    components?: (ActionRowBuilder<MessageActionRowComponentBuilder> | ActionRow<MessageActionRowComponent> | ActionRowData<MessageActionRowComponent | MessageActionRowComponentData>)[];
    /**
     * Usable for interaction based paginations to send page privately
     */
    ephemeral?: boolean;
}
export type PageResolvable = StaticPageResolvable | DynamicPageFunction;
export type StaticPageResolvable = string | PageData | EmbedBuilder | Embed;
export type DynamicPageFunction = () => PageResolvable | Promise<PageResolvable>;
export declare function resolvePage(page: StaticPageResolvable): PageData;
export declare function resolvePage(page: DynamicPageFunction): Promise<PageData>;
export declare function resolvePage(page: PageResolvable): Promise<PageData> | PageData;
